// Сортировка Шелла
def shell_sort(arr):
    """
    Сортировка Шелла - улучшенная версия сортировки вставками
    с использованием убывающих промежутков
    """
    n = len(arr)  # Получаем длину массива
    
    # Начинаем с большого промежутка (половина длины массива)
    # и последовательно уменьшаем его в два раза на каждой итерации
    gap = n // 2
    
    # Продолжаем, пока промежуток больше нуля
    while gap > 0:
        
        # Применяем модифицированную сортировку вставками для элементов,
        # находящихся на расстоянии gap друг от друга
        # Начинаем с элемента на позиции gap и до конца массива
        for i in range(gap, n):
            # Сохраняем текущий элемент для последующей вставки
            temp = arr[i]
            
            # Инициализируем j как текущий индекс
            j = i
            
            # Сдвигаем элементы, которые больше temp, вперед на gap позиций
            # Условие j >= gap гарантирует, что мы не выходим за левую границу
            # Второе условие проверяет, нужно ли сдвигать элемент
            while j >= gap and arr[j - gap] > temp:
                # Сдвигаем элемент из позиции j-gap в позицию j
                arr[j] = arr[j - gap]
                # Переходим к предыдущему элементу в текущей группе
                j -= gap
            
            # Вставляем сохраненный элемент на найденную правильную позицию
            arr[j] = temp
        
        # Уменьшаем промежуток в два раза для следующей итерации
        gap //= 2


def print_array(arr):
    """Вспомогательная функция для вывода массива"""
    for num in arr:
        print(num, end=" ")
    print()  # Переход на новую строку после вывода массива


# Основная часть программы
if name == "__main__":
    # Создаем тестовый массив как в C++ версии
    test_array = [12, 34, 54, 2, 3]
    
    print("Исходный массив: ", end="")
    print_array(test_array)
    
    # Вызываем функцию сортировки Шелла
    shell_sort(test_array)
    
    print("Отсортированный массив: ", end="")
    print_array(test_array)
