# Сортировка обменом Python

def bubble_sort(arr):
    """
    Функция для сортировки массива методом пузырька
    Принимает: arr - список чисел для сортировки
    Возвращает: None (сортирует массив на месте)
    """
    n = len(arr)  # Получаем длину массива и сохраняем в переменную n
    
    # Внешний цикл: проходим по всем элементам массива от начала до предпоследнего
    # i - счетчик проходов по массиву, после каждого прохода самый большой элемент "всплывает" в конец
    for i in range(n):
        # Внутренний цикл: проходим по неотсортированной части массива
        # После каждого прохода внешнего цикла последний i элементов уже отсортированы
        # Поэтому проходим только до n-i-1
        for j in range(0, n - i - 1):
            # Сравниваем текущий элемент со следующим
            if arr[j] > arr[j + 1]:
                # Если текущий элемент больше следующего, меняем их местами
                # Используем множественное присваивание для обмена значений
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

def print_array(arr):
    """
    Вспомогательная функция для вывода массива на экран
    Принимает: arr - список чисел для вывода
    Возвращает: None
    """
    # Проходим по всем элементам массива
    for i in range(len(arr)):
        # Выводим каждый элемент через пробел
        print(arr[i], end=" ")
    # Переходим на новую строку после вывода всего массива
    print()

# Главный блок выполнения программы
if name == "__main__":
    # Создаем и инициализируем тестовый массив
    test_array = [64, 34, 25, 12, 22, 11, 90]
    
    # Выводим исходный массив
    print("Исходный массив:")
    print_array(test_array)
    
    # Вызываем функцию пузырьковой сортировки
    bubble_sort(test_array)
    
    # Выводим отсортированный массив
    print("Отсортированный массив:")
    print_array(test_array)
