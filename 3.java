// сортировка вставками
#include <iostream>  // Подключаем библиотеку для ввода/вывода
#include <vector>    // Подключаем библиотеку для работы с динамическими массивами
using namespace std; // Используем стандартное пространство имен

// Функция сортировки вставками
// Принимает ссылку на вектор целых чисел
void insertionSort(vector<int>& arr) {
    int n = arr.size(); // Получаем размер массива
    
    // Внешний цикл: проходим по всем элементам массива, начиная со второго (индекс 1)
    // i - индекс текущего элемента, который мы будем вставлять в отсортированную часть
    for (int i = 1; i < n; i++) {
        // Сохраняем значение текущего элемента, который будем вставлять
        int key = arr[i];
        
        // j - индекс элемента, с которым будем сравнивать key
        // Начинаем с элемента, стоящего перед текущим (i-1)
        int j = i - 1;
        
        // Внутренний цикл: перемещаемся по отсортированной части справа налево
        // Пока не дошли до начала массива И пока текущий элемент отсортированной части больше key
        while (j >= 0 && arr[j] > key) {
            // Сдвигаем элемент вправо, освобождая место для key
            arr[j + 1] = arr[j];
            // Переходим к следующему элементу слева
            j = j - 1;
        }
        
        // Нашли правильную позицию для key - вставляем его
        arr[j + 1] = key;
    }
}

// Вспомогательная функция для вывода массива на экран
void printArray(const vector<int>& arr) {
    // Проходим по всем элементам массива
    for (int i = 0; i < arr.size(); i++) {
        // Выводим каждый элемент через пробел
        cout << arr[i] << " ";
    }
    // Переходим на новую строку после вывода всего массива
    cout << endl;
}

// Главная функция - точка входа в программу
int main() {
    // Создаем и инициализируем тестовый массив
    vector<int> testArray = {12, 11, 13, 5, 6};
    
    // Выводим исходный массив
    cout << "Исходный массив: ";
    printArray(testArray);
    
    // Вызываем функцию сортировки вставками
    insertionSort(testArray);
    
    // Выводим отсортированный массив
    cout << "Отсортированный массив: ";
    printArray(testArray);
    
    // Возвращаем 0, указывая на успешное завершение программы
    return 0;
}
